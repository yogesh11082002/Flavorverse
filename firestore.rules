rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only be created by the owner, and can't be deleted.
    match /users/{userId} {
      allow read: if true;
      allow create, update: if isOwner(userId);
      allow delete: if false;
    }

    // Dishes can be read by anyone, but only created, updated, and
    // deleted by the owner.
    match /dishes/{dishId} {
      allow read: if true;
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.userId);

      // Comments can be read by anyone, but only created by authenticated users.
      // Users can only edit or delete their own comments.
      match /dishes/{dishId}/comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        allow update, delete: if isSignedIn() && isOwner(resource.data.userId);
      }

      // Likes can be read by anyone.
      // Users can only like/unlike for themselves. The like document ID must be the user's ID.
      match /dishes/{dishId}/likes/{userId} {
        allow read: if true;
        allow create, delete: if isSignedIn() && isOwner(userId);
        allow update: if false;
      }
    }
  }
}
